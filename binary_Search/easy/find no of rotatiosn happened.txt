Find Kth Rotation
Difficulty: EasyAccuracy: 23.16%Submissions: 203K+Points: 2
Given an increasing sorted rotated array arr of distinct integers. The array is right-rotated k times. Find the value of k.
Let's suppose we have an array arr = [2, 4, 6, 9], so if we rotate it by 2 times so that it will look like this:
After 1st Rotation : [9, 2, 4, 6]
After 2nd Rotation : [6, 9, 2, 4]

Examples:

Input: arr = [5, 1, 2, 3, 4]
Output: 1
Explanation: The given array is 5 1 2 3 4. The original sorted array is 1 2 3 4 5. We can see that the array was rotated 1 times to the right.

class Solution {
  public:
    int findKRotation(vector<int> &arr) {
        // Code Here
        int n = arr.size();
        int low = 0;
        int high = n-1;
        int mini = INT_MAX;
        int index = -1;
        
        while(low<=high){
            int mid = (low+high)/2;
            // left sorted
            if(arr[low]<=arr[mid]){
                if(arr[low]<mini){
                    mini = arr[low];
                    index = low;
                }
                low = mid+1;
            }
            // right sorted
            else{
                if(arr[mid]<mini){
                    mini = arr[mid];
                    index = mid;
                }
                high = mid-1;
            }
            
        }
        
        return index;
        
    }
};