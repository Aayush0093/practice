Given a sorted array Arr of size N and a number X, you need to find the number of occurrences of X in Arr.

Example 1:

Input:
N = 7, X = 2
Arr[] = {1, 1, 2, 2, 2, 2, 3}
Output: 4
Explanation: 2 occurs 4 times in the
given array.


class Solution{
    
public:	
	/* if x is present in arr[] then returns the count
		of occurrences of x, otherwise returns 0. */
		
	    int binSearch(int nums[] , int target, int n){
        int start = 0;
        int end = n-1;
        int res = -1;

        while(start<=end){
            int mid = (start+end)/2;
            if(nums[mid]==target){
                res = mid;
                end = mid-1;
            }
            else if(nums[mid]<target){
                start = mid+1;
            }
            else{
                end = mid-1;
            }
        }
        return res;
    }
    int binSearchlast(int nums[] , int target, int n){
        int start = 0;
        int end = n-1;
        int res = -1;

        while(start<=end){
            int mid = (start+end)/2;
            if(nums[mid]==target){
                res = mid;
                start = mid+1;
            }
            else if(nums[mid]<target){
                start = mid+1;
            }
            else{
                end = mid-1;
            }
        }
        return res;
    }
	int count(int arr[], int n, int x) {
	    // code here
	    int first = binSearch(arr,x,n);
	    int second = binSearchlast(arr,x,n);
	    
	    if(first==-1 || second == -1) return 0;
	    else
	        return second-first+1;
	}
};
